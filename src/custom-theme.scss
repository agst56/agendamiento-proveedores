
// Include theming for Angular Material with `mat.theme()`.
// This Sass mixin will define CSS variables that are used for styling Angular Material
// components according to the Material 3 design spec.
// Learn more about theming and how to use it for your application's
// custom components at https://material.angular.dev/guide/theming
@use '@angular/material' as mat;

// Define custom color palettes
$custom-primary: mat.m2-define-palette(mat.$m2-indigo-palette, 600);
$custom-accent: mat.m2-define-palette(mat.$m2-blue-palette, A200, A100, A400);
$custom-warn: mat.m2-define-palette(mat.$m2-red-palette);

// Create the theme object
$custom-theme: mat.m2-define-light-theme((
  color: (
    primary: $custom-primary,
    accent: $custom-accent,
    warn: $custom-warn,
  ),
  typography: mat.m2-define-typography-config(),
  density: 0,
));

html {
  @include mat.theme((
    color: (
      primary: mat.$azure-palette,
      tertiary: mat.$blue-palette,
    ),
    typography: Roboto,
    density: 0,
  ));
  
  // Include the custom theme styles
  @include mat.all-component-themes($custom-theme);
}

body {
  // Default the application to a light color theme. This can be changed to
  // `dark` to enable the dark color theme, or to `light dark` to defer to the
  // user's system settings.
  color-scheme: light;

  // Set a default background, font and text colors for the application using
  // Angular Material's system-level CSS variables. Learn more about these
  // variables at https://material.angular.dev/guide/system-variables
  background-color: var(--mat-sys-surface);
  color: var(--mat-sys-on-surface);
  font: var(--mat-sys-body-medium);

  // Reset the user agent margin.
  margin: 0;
}

// Custom CSS variables for consistent theming
:root {
  --app-primary: #3f51b5;
  --app-accent: #03a9f4;
  --app-warn: #f44336;
  --app-background: #fafafa;
  --app-surface: #ffffff;
  --app-text-primary: rgba(0, 0, 0, 0.87);
  --app-text-secondary: rgba(0, 0, 0, 0.54);
}
